// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from './client';
import type { RootGetData, RootGetResponses, GetDockerOverviewDockerOverviewGetData, GetDockerOverviewDockerOverviewGetResponses, GetTopContainersDockerTopContainersGetData, GetTopContainersDockerTopContainersGetResponses, GetPerformanceWarningDockerPerformanceWarningGetData, GetPerformanceWarningDockerPerformanceWarningGetResponses, GetLatestLogDockerLogsLatestGetData, GetLatestLogDockerLogsLatestGetResponses, CheckDockerStatusDockerStatusGetData, CheckDockerStatusDockerStatusGetResponses, ListContainersContainersGetData, ListContainersContainersGetResponses, ListContainersContainersGetErrors, GetContainerDetailsContainersContainerIdGetData, GetContainerDetailsContainersContainerIdGetResponses, GetContainerDetailsContainersContainerIdGetErrors, GetContainerLogsContainersContainerIdLogsGetData, GetContainerLogsContainersContainerIdLogsGetResponses, GetContainerLogsContainersContainerIdLogsGetErrors, StartContainerContainersContainerIdStartPostData, StartContainerContainersContainerIdStartPostResponses, StartContainerContainersContainerIdStartPostErrors, StopContainerContainersContainerIdStopPostData, StopContainerContainersContainerIdStopPostResponses, StopContainerContainersContainerIdStopPostErrors, RestartContainerContainersContainerIdRestartPostData, RestartContainerContainersContainerIdRestartPostResponses, RestartContainerContainersContainerIdRestartPostErrors, ListDockerImagesImagesGetData, ListDockerImagesImagesGetResponses, ListDockerVolumesVolumesGetData, ListDockerVolumesVolumesGetResponses, GetContainerVolumesContainersContainerIdVolumesGetData, GetContainerVolumesContainersContainerIdVolumesGetResponses, GetContainerVolumesContainersContainerIdVolumesGetErrors } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Root
 */
export const rootGet = <ThrowOnError extends boolean = false>(options?: Options<RootGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<RootGetResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/',
        ...options
    });
};

/**
 * Get Docker Overview
 */
export const getDockerOverviewDockerOverviewGet = <ThrowOnError extends boolean = false>(options?: Options<GetDockerOverviewDockerOverviewGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetDockerOverviewDockerOverviewGetResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/docker/overview',
        ...options
    });
};

/**
 * Get Top Containers
 */
export const getTopContainersDockerTopContainersGet = <ThrowOnError extends boolean = false>(options?: Options<GetTopContainersDockerTopContainersGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetTopContainersDockerTopContainersGetResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/docker/top-containers',
        ...options
    });
};

/**
 * Get Performance Warning
 */
export const getPerformanceWarningDockerPerformanceWarningGet = <ThrowOnError extends boolean = false>(options?: Options<GetPerformanceWarningDockerPerformanceWarningGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetPerformanceWarningDockerPerformanceWarningGetResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/docker/performance-warning',
        ...options
    });
};

/**
 * Get Latest Log
 */
export const getLatestLogDockerLogsLatestGet = <ThrowOnError extends boolean = false>(options?: Options<GetLatestLogDockerLogsLatestGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetLatestLogDockerLogsLatestGetResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/docker/logs/latest',
        ...options
    });
};

/**
 * Check Docker Status
 */
export const checkDockerStatusDockerStatusGet = <ThrowOnError extends boolean = false>(options?: Options<CheckDockerStatusDockerStatusGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<CheckDockerStatusDockerStatusGetResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/docker-status',
        ...options
    });
};

/**
 * List Containers
 */
export const listContainersContainersGet = <ThrowOnError extends boolean = false>(options?: Options<ListContainersContainersGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<ListContainersContainersGetResponses, ListContainersContainersGetErrors, ThrowOnError>({
        responseType: 'json',
        url: '/containers',
        ...options
    });
};

/**
 * Get Container Details
 */
export const getContainerDetailsContainersContainerIdGet = <ThrowOnError extends boolean = false>(options: Options<GetContainerDetailsContainersContainerIdGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetContainerDetailsContainersContainerIdGetResponses, GetContainerDetailsContainersContainerIdGetErrors, ThrowOnError>({
        responseType: 'json',
        url: '/containers/{container_id}',
        ...options
    });
};

/**
 * Get Container Logs
 */
export const getContainerLogsContainersContainerIdLogsGet = <ThrowOnError extends boolean = false>(options: Options<GetContainerLogsContainersContainerIdLogsGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetContainerLogsContainersContainerIdLogsGetResponses, GetContainerLogsContainersContainerIdLogsGetErrors, ThrowOnError>({
        responseType: 'text',
        url: '/containers/{container_id}/logs',
        ...options
    });
};

/**
 * Start Container
 */
export const startContainerContainersContainerIdStartPost = <ThrowOnError extends boolean = false>(options: Options<StartContainerContainersContainerIdStartPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<StartContainerContainersContainerIdStartPostResponses, StartContainerContainersContainerIdStartPostErrors, ThrowOnError>({
        responseType: 'json',
        url: '/containers/{container_id}/start',
        ...options
    });
};

/**
 * Stop Container
 */
export const stopContainerContainersContainerIdStopPost = <ThrowOnError extends boolean = false>(options: Options<StopContainerContainersContainerIdStopPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<StopContainerContainersContainerIdStopPostResponses, StopContainerContainersContainerIdStopPostErrors, ThrowOnError>({
        responseType: 'json',
        url: '/containers/{container_id}/stop',
        ...options
    });
};

/**
 * Restart Container
 */
export const restartContainerContainersContainerIdRestartPost = <ThrowOnError extends boolean = false>(options: Options<RestartContainerContainersContainerIdRestartPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<RestartContainerContainersContainerIdRestartPostResponses, RestartContainerContainersContainerIdRestartPostErrors, ThrowOnError>({
        responseType: 'json',
        url: '/containers/{container_id}/restart',
        ...options
    });
};

/**
 * List Docker Images
 */
export const listDockerImagesImagesGet = <ThrowOnError extends boolean = false>(options?: Options<ListDockerImagesImagesGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<ListDockerImagesImagesGetResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/images',
        ...options
    });
};

/**
 * List Docker Volumes
 */
export const listDockerVolumesVolumesGet = <ThrowOnError extends boolean = false>(options?: Options<ListDockerVolumesVolumesGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<ListDockerVolumesVolumesGetResponses, unknown, ThrowOnError>({
        responseType: 'json',
        url: '/volumes',
        ...options
    });
};

/**
 * Get Container Volumes
 */
export const getContainerVolumesContainersContainerIdVolumesGet = <ThrowOnError extends boolean = false>(options: Options<GetContainerVolumesContainersContainerIdVolumesGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetContainerVolumesContainersContainerIdVolumesGetResponses, GetContainerVolumesContainersContainerIdVolumesGetErrors, ThrowOnError>({
        responseType: 'json',
        url: '/containers/{container_id}/volumes',
        ...options
    });
};